from list import List
from unittest import TestCase


class TestList(TestCase):

    def test_buscar(self):
        lista = List()
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        self.assertEqual(lista.acessar_atual(), 1)
        encontrou = lista.buscar(3)
        self.assertTrue(encontrou)
        self.assertEqual(lista.acessar_atual(), 3)
        encontrou = lista.buscar(4)
        self.assertFalse(encontrou)
        self.assertEqual(lista.acessar_atual(), 3)

    def test_inserir_primeiro_ultimo(self):
        lista = List()
        lista.inserir_como_primeiro(4)
        self.assertEqual(lista.acessar_atual(), 4)
        lista.inserir_como_ultimo(5)
        lista.inserir_como_ultimo(6)
        lista.inserir_como_primeiro(3)
        self.assertEqual(lista.tamanho(), 4)
        self.assertEqual(lista.posicao_de(3), 1)
        self.assertEqual(lista.posicao_de(4), 2)
        self.assertEqual(lista.posicao_de(5), 3)
        self.assertEqual(lista.posicao_de(6), 4)

    def test_inserir_antes_apos(self):
        lista = List()
        lista.inserir_como_primeiro(4)
        lista.buscar(4)
        lista.inserir_antes_atual(2)
        lista.inserir_apos_atual(6)
        lista.inserir_antes_atual(3)
        lista.inserir_apos_atual(5)
        self.assertEqual(lista.posicao_de(2), 1)
        self.assertEqual(lista.posicao_de(3), 2)
        self.assertEqual(lista.posicao_de(4), 3)
        self.assertEqual(lista.posicao_de(5), 4)
        self.assertEqual(lista.posicao_de(6), 5)

    def test_inserir_posicao(self):
        lista = List()
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        lista.inserir_como_ultimo(6)
        self.assertEqual(lista.posicao_de(2), 1)
        self.assertEqual(lista.posicao_de(3), 2)
        self.assertEqual(lista.posicao_de(6), 3)
        lista.inserir_na_posicao(1, 1)
        lista.inserir_na_posicao(4, 4)
        lista.inserir_na_posicao(5, 5)
        self.assertEqual(lista.posicao_de(1), 1)
        self.assertEqual(lista.posicao_de(2), 2)
        self.assertEqual(lista.posicao_de(3), 3)
        self.assertEqual(lista.posicao_de(4), 4)
        self.assertEqual(lista.posicao_de(5), 5)
        self.assertEqual(lista.posicao_de(6), 6)

    def test_excluir_atual(self):
        lista = List()
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        lista.buscar(2)
        lista.excluir_atual()
        self.assertEqual(lista.posicao_de(1), 1)
        self.assertEqual(lista.posicao_de(2), -1)
        self.assertEqual(lista.posicao_de(3), 2)

    def test_excluir_primeiro_ultimo(self):
        lista = List()
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        lista.inserir_como_ultimo(4)
        lista.excluir_ultimo()
        self.assertEqual(lista.posicao_de(1), 1)
        self.assertEqual(lista.posicao_de(2), 2)
        self.assertEqual(lista.posicao_de(3), 3)
        self.assertEqual(lista.posicao_de(4), -1)
        lista.excluir_primeiro()
        self.assertEqual(lista.posicao_de(1), -1)
        self.assertEqual(lista.posicao_de(2), 1)
        self.assertEqual(lista.posicao_de(3), 2)
        self.assertEqual(lista.posicao_de(4), -1)

    def test_excluir_elemento(self):
        lista = List()
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        lista.inserir_como_ultimo(4)
        lista.excluir_elem(3)
        self.assertEqual(lista.posicao_de(1), 1)
        self.assertEqual(lista.posicao_de(2), 2)
        self.assertEqual(lista.posicao_de(3), -1)
        self.assertEqual(lista.posicao_de(4), 3)

    def test_excluir_posicao(self):
        lista = List()
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        lista.inserir_como_ultimo(3)
        lista.inserir_como_ultimo(4)
        lista.inserir_como_ultimo(5)
        lista.excluir_da_posicao(1)
        lista.excluir_da_posicao(3)
        self.assertEqual(lista.posicao_de(1), -1)
        self.assertEqual(lista.posicao_de(2), 1)
        self.assertEqual(lista.posicao_de(3), 2)
        self.assertEqual(lista.posicao_de(4), -1)
        self.assertEqual(lista.posicao_de(5), 3)

    def test_cheia_vazia(self):
        lista = List(2)
        self.assertTrue(lista.vazia())
        lista.inserir_como_ultimo(1)
        lista.inserir_como_ultimo(2)
        self.assertTrue(lista.cheia())
